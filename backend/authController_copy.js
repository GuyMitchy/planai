const bcrypt = require('bcrypt');\nconst jwt = require('jsonwebtoken');\nconst { Pool } = require('pg');\nconst pool = new Pool(require('./config/config.json').development);\n\nmodule.exports = {\n  register: async (req, res) => {\n    const { username, password } = req.body;\n    const hashedPassword = await bcrypt.hash(password, 10);\n    try {\n      const result = await pool.query('INSERT INTO users (username, password) VALUES ($1, $2) RETURNING *', [username, hashedPassword]);\n      res.status(201).json(result.rows[0]);\n    } catch (error) {\n      res.status(500).json({ error: "Error registering user" });\n    }\n  },\n  login: async (req, res) => {\n    const { username, password } = req.body;\n    try {\n      const result = await pool.query('SELECT * FROM users WHERE username = $1', [username]);\n      const user = result.rows[0];\n      if (user && await bcrypt.compare(password, user.password)) {\n        const token = jwt.sign({ id: user.id }, process.env.JWT_SECRET, { expiresIn: "1h" });\n        res.json({ token });\n      } else {\n        res.status(401).json({ error: "Invalid credentials" });\n      }\n    } catch (error) {\n      res.status(500).json({ error: "Error logging in" });\n    }\n  }\n};
